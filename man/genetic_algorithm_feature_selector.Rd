% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature_selection.R
\name{genetic_algorithm_feature_selector}
\alias{genetic_algorithm_feature_selector}
\title{Genetic Algorithm Feature Selector}
\usage{
genetic_algorithm_feature_selector(
  data,
  clustering_algo,
  labels_name,
  n_runs = 30,
  population_size = 20,
  generations = 50,
  tournament_selection_k = 3,
  mutation_rate = 0.01,
  crossover_rate = 0.8,
  elite_size = 2,
  n_generations_no_change = 10,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{data}{A data frame or matrix of shape \code{(n_samples, n_features)}.}

\item{clustering_algo}{A clustering function or callable (e.g., \code{kmeans}) that is stochastic and
compatible with \code{\link{stochastic_clustering_runner}}.}

\item{labels_name}{A string with the name of the parameter indicating where the cluster labels are stored in
the output of \code{clustering_algo}.}

\item{n_runs}{Integer, number of repeated clustering runs per feature subset. Defaults to 30.}

\item{population_size}{Integer, number of candidate feature subsets in each generation. Defaults to 20.}

\item{generations}{Integer, number of generations to evolve. Defaults to 50.}

\item{tournament_selection_k}{Integer, tournament size for parent selection. Defaults to 3.}

\item{mutation_rate}{Numeric, probability of flipping a feature selection bit in an offspring. Defaults to 0.01.}

\item{crossover_rate}{Numeric, probability of performing crossover between two parents. Defaults to 0.8.}

\item{elite_size}{Integer, number of top-performing subsets preserved per generation. Defaults to 2.}

\item{n_generations_no_change}{Integer, early stopping criterion: generations without improvement. Defaults to 10.}

\item{verbose}{Logical; if \code{TRUE}, prints progress messages for each generation. Defaults to \code{FALSE}.}

\item{...}{Additional arguments passed on to \code{clustering_algo}.}
}
\value{
A list with the following elements:
\describe{
  \item{\code{best_features}}{A character vector (if \code{data} is a data frame) or integer indices (if \code{data}
        is a matrix) representing the optimal feature subset found.}
  \item{\code{best_ecc}}{Numeric, the highest median ECC achieved during evolution.}
  \item{\code{history}}{A data frame tracking the best fitness (median ECC) by generation.}
  \item{\code{best_fitness_scr_result}}{Clustering results for the optimal feature subset.}
}
}
\description{
Selects the most stable subset of features using a genetic algorithm.
}
\details{
This function uses a genetic algorithm to iteratively optimize feature selection for clustering stability.
It repeatedly applies a stochastic clustering algorithm on different feature subsets and evaluates their
stability using Element-Centric Consistency (ECC). The algorithm evolves through selection, crossover, and
mutation, converging on the feature set that maximizes clustering robustness.
}
\examples{
\dontrun{
  # Example using k-means clustering:
  set.seed(42)
  data <- matrix(rnorm(2000), nrow = 200, ncol = 10)
  clustering_algo <- function(data, centers) {
    km <- kmeans(data, centers = centers)
    km$cluster
  }
  ga_results <- genetic_algorithm_feature_selector(
    data = data,
    clustering_algo = clustering_algo,
    labels_name = NULL,
    n_runs = 30,
    population_size = 20,
    generations = 50,
    tournament_selection_k = 3,
    mutation_rate = 0.01,
    crossover_rate = 0.8,
    elite_size = 2,
    n_generations_no_change = 10,
    verbose = TRUE,
    centers = 3
  )
  print("Best Features:")
  print(ga_results$best_features)
  print("Best ECC Score:")
  print(ga_results$best_ecc)
}

}
